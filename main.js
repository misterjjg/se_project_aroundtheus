!function(){"use strict";class e{constructor(e,t,s){let{name:n,link:o}=e;this._name=n,this._link=o,this._cardSelector=t,this._handleCardClick=s}_setEventListeners(){this._cardElement.querySelector(".cards__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".cards__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardElement.querySelector(".cards__image").addEventListener("click",(()=>{this._handlePreviewDisplay()}))}_handleLikeIcon(){this._cardElement.querySelector(".cards__like-button").classList.toggle("cards__like-button_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_handlePreviewDisplay(){this._handleCardClick(this._name,this._link)}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".cards__content").cloneNode(!0)}getView(){this._cardElement=this._getTemplate();const e=this._cardElement.querySelector(".cards__image"),t=this._cardElement.querySelector(".cards__title");return e.src=this._link,e.alt=this._name,t.textContent=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}toggleButtonState(){this._hasInvalidInput(this._input)?this._disableButton():this._enableButton()}resetValidation(){this.toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeByEscape=this._closeByEscape.bind(this),this._popupCloseButton=this._popupElement.querySelector(".modal__close-button")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._closeByEscape)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._closeByEscape)}_closeByEscape=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close-button"))&&this.close(e.currentTarget)})),this._popupCloseButton.addEventListener("click",(()=>{this.close()}))}}class n extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._popupInputs=this._popupForm.querySelectorAll(".modal__input"),this._handleFormSubmit=t}close(){this._popupForm.reset(),this._popupForm.removeEventListener("submit",this._submitForm),super.close()}_getInputValues(){const e={};return this._popupInputs.forEach((t=>{""!==t.value&&(e[t.name]=t.value)})),e}_submitForm=e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t)};setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",this._submitForm)}}const o=document.querySelector("#profile-edit-button"),i=document.querySelector("#profile-edit-modal"),r=document.querySelector("#profile-title-input"),a=document.querySelector("#profile-description-input"),l=i.querySelector(".modal__form"),c=document.querySelector(".cards__list"),u=document.querySelector("#profile-add-button"),d=document.querySelector("#add-card-modal").querySelector(".modal__form"),_={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},m=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=t}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=f(e);m.addItem(t)}},c);m.renderItems();const p=new class{constructor(e,t){this._nameElement=e,this._jobElement=t}getUserInfo(){const e={};return e.profileName=this._nameElement.textContent,e.description=this._jobElement.textContent,e}setUserInfo(e,t){this._nameElement.textContent=e,this._jobElement.textContent=t}}(document.querySelector(".profile__title"),document.querySelector(".profile__description")),h=new n("#profile-edit-modal",(function(e){const{title:t,description:s}=e;p.setUserInfo(t,s),h.close()})),E=new n("#add-card-modal",(function(e){const{title:t,url:s}=e,n=f({name:t,link:s});m.addItem(n),E.close()})),v=new class extends s{constructor(e){super({popupSelector:e}),this._previewImageTitle=this._popupElement.querySelector(".modal__caption"),this._previewImageModal=this._popupElement.querySelector(".modal__preview-image")}open(e,t){this._previewImageModal.src=t,this._previewImageModal.alt=e,this._previewImageTitle.textContent=e,super.open()}}("#preview-modal"),S=new t(_,l),y=new t(_,d);function b(e,t){v.open(e,t)}function f(t){return new e(t,"#card-template",b).getView()}S.enableValidation(),y.enableValidation(),o.addEventListener("click",(()=>{const{profileName:e,description:t}=p.getUserInfo();r.value=e,a.value=t,h.open(),S.resetValidation()})),u.addEventListener("click",(()=>{E.open(),y.resetValidation()})),h.setEventListeners(),E.setEventListeners(),v.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,